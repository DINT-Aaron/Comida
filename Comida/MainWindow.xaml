<Window x:Class="Comida.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Comida"
        mc:Ignorable="d"
        Title="Comida" Icon="assets/icon.ico" Height="450" Width="800" MinHeight="500" MinWidth="650">

    <Window.Resources>
        <Style TargetType="{x:Type StackPanel}" x:Key="panelLateral">
            <Setter Property="DockPanel.Dock" Value="Right"></Setter>
            <Setter Property="Background" Value="LightGray"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Width" Value="280"></Setter>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="10,10,10,0"></Setter>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="10,0,10,10"></Setter>
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}" x:Key="nombreTextBox">
            <Setter Property="Text" Value="{Binding Path=PlatoSeleccionado.Nombre, UpdateSourceTrigger=PropertyChanged}"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=PlatoSeleccionado}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}" x:Key="fotoTextBox">
            <Setter Property="Text" Value="{Binding Path=PlatoSeleccionado.Imagen, UpdateSourceTrigger=PropertyChanged}"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=PlatoSeleccionado}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="10,0,10,10"></Setter>
            <Setter Property="ItemsSource" Value="{Binding Path=Tipos}"></Setter>
            <Setter Property="SelectedItem" Value="{Binding Path=PlatoSeleccionado.Tipo}"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=PlatoSeleccionado}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type GroupBox}">
            <Setter Property="Header" Value="Alérngenos"></Setter>
            <Setter Property="Margin" Value="10,0,10,10"></Setter>
            <Setter Property="BorderBrush" Value="Black"></Setter>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Margin" Value="0,5,50,5"></Setter>
        </Style>
        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}" x:Key="lecheCheckBox">
            <Setter Property="IsChecked" Value="{Binding Path=PlatoSeleccionado.Leche}"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=PlatoSeleccionado}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}" x:Key="sojaCheckBox">
            <Setter Property="IsChecked" Value="{Binding Path=PlatoSeleccionado.Soja}"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=PlatoSeleccionado}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}" x:Key="glutenCheckBox">
            <Setter Property="IsChecked" Value="{Binding Path=PlatoSeleccionado.Gluten}"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=PlatoSeleccionado}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}" x:Key="sulfitosCheckBox">
            <Setter Property="IsChecked" Value="{Binding Path=PlatoSeleccionado.Sulfitos}"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=PlatoSeleccionado}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Width" Value="120"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Margin" Value="10,0"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=PlatoSeleccionado}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="nombrePlato">
            <Setter Property="Text" Value="{Binding Path=Nombre}"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Tipo}" Value="Americana">
                    <Setter Property="FontFamily" Value="Slim Summer"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Tipo}" Value="China">
                    <Setter Property="FontFamily" Value="Chinese Wok Food St"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Tipo}" Value="Mexicana">
                    <Setter Property="FontFamily" Value="Taco Salad"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" x:Key="iconos">
            <Setter Property="Visibility" Value="Collapsed"></Setter>
            <Setter Property="DockPanel.Dock" Value="Left"></Setter>
            <Setter Property="Width" Value="40"></Setter>
        </Style>
        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource iconos}" x:Key="iconoAmerica">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Tipo}" Value="Americana">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource iconos}" x:Key="iconoChina">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Tipo}" Value="China">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource iconos}" x:Key="iconoMexico">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Tipo}" Value="Mexicana">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource iconos}" x:Key="iconosAlergenos">
            <Setter Property="DockPanel.Dock" Value="Right"></Setter>
            <Setter Property="Width" Value="26"></Setter>
        </Style>
        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource iconosAlergenos}" x:Key="iconoGluten">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Gluten}" Value="True">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource iconosAlergenos}" x:Key="iconoSoja">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Soja}" Value="True">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource iconosAlergenos}" x:Key="iconoLeche">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Leche}" Value="True">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" BasedOn="{StaticResource iconosAlergenos}" x:Key="iconoSulfitos">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Sulfitos}" Value="True">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Image}" x:Key="imagenPlato">
            <Setter Property="Source" Value="{Binding Path=Imagen}"></Setter>
            <Setter Property="Width" Value="250"></Setter>
        </Style>

        <DataTemplate DataType="{x:Type local:Plato}">
            <Border BorderBrush="Black" BorderThickness="1" Background="AliceBlue" Margin="10">
                <Border.Effect>
                    <DropShadowEffect/>
                </Border.Effect>
                <DockPanel Width="240" Height="280">
                    <Viewbox DockPanel.Dock="Top" Stretch="Fill" MaxHeight="50">
                        <TextBlock Style="{StaticResource nombrePlato}"></TextBlock>
                    </Viewbox>
                    <DockPanel DockPanel.Dock="Bottom" LastChildFill="False" Margin="10">
                        <Image Source="assets/china.png" Style="{StaticResource iconoChina}"></Image>
                        <Image Source="assets/mexico.png" Style="{StaticResource iconoMexico}"></Image>
                        <Image Source="assets/united_states.png" Style="{StaticResource iconoAmerica}"></Image>
                        <Image Source="assets/gluten.png" Style="{StaticResource iconoGluten}"></Image>
                        <Image Source="assets/milk.png" Style="{StaticResource iconoLeche}"></Image>
                        <Image Source="assets/soybean.png" Style="{StaticResource iconoSoja}"></Image>
                        <Image Source="assets/sulfide.png" Style="{StaticResource iconoSulfitos}"></Image>
                    </DockPanel>
                    <Image Source="{Binding Path=Imagen}" Width="200" Height="200" Stretch="Fill"></Image>
                </DockPanel>
            </Border>
        </DataTemplate>

        <ControlTemplate x:Key="TextBoxControlTemplate" TargetType="{x:Type TextBox}">
            <Border CornerRadius="5" Padding="5" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect ShadowDepth="0" Color="#FF569DE5" BlurRadius="20"></DropShadowEffect>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="GroupBoxControlTemplate" TargetType="{x:Type GroupBox}">
            <Grid SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="6"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="6"/>
                </Grid.RowDefinitions>
                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" CornerRadius="0" Grid.Row="1" Grid.RowSpan="3"/>
                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" CornerRadius="0" Grid.Row="1" Grid.RowSpan="3">
                    <Border.OpacityMask>
                        <MultiBinding ConverterParameter="7" UpdateSourceTrigger="Default">
                            <MultiBinding.Converter>
                                <BorderGapMaskConverter/>
                            </MultiBinding.Converter>
                            <Binding ElementName="Header" Path="ActualWidth"/>
                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                        </MultiBinding>
                    </Border.OpacityMask>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0">
                        <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                    </Border>
                </Border>
                <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
                <ContentPresenter Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="CheckBoxControlTemplate" TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Padding="2" CornerRadius="3" x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Grid x:Name="markGrid">
                        <Path x:Name="optionMark" Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" Fill="#FF5593FF" Margin="1" Opacity="0" Stretch="None"/>
                        <Rectangle x:Name="indeterminateMark" Fill="#FF212121" Margin="2" Opacity="0"/>
                    </Grid>
                </Border>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="True">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="4,-1,0,0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFF3F9FF"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF5593FF"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF5593FF"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFE6E6E6"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF5593FF"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFD9ECFF"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF3C77DD"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ButtonControlTemplate" TargetType="{x:Type Button}">
            <Border CornerRadius="5" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="LightSkyBlue" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="white"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </Window.Resources>
    <Border Background="LightSkyBlue">
        <Border BorderThickness="1" BorderBrush="Black"  Margin="10" Background="White">
            <DockPanel Margin="10">
                <StackPanel Style="{StaticResource panelLateral}">
                    <TextBlock>Nombre del plato</TextBlock>
                    <TextBox Style="{StaticResource nombreTextBox}" Template="{DynamicResource TextBoxControlTemplate}"></TextBox>
                    <TextBlock>Foto del plato</TextBlock>
                    <TextBox Style="{StaticResource fotoTextBox}" Template="{DynamicResource TextBoxControlTemplate}"></TextBox>
                    <TextBlock>Tipo de comida</TextBlock>
                    <ComboBox></ComboBox>
                    <GroupBox Template="{DynamicResource GroupBoxControlTemplate}">
                        <WrapPanel >
                            <CheckBox Style="{StaticResource lecheCheckBox}" Template="{DynamicResource CheckBoxControlTemplate}">Leche</CheckBox>
                            <CheckBox Style="{StaticResource sojaCheckBox}" Template="{DynamicResource CheckBoxControlTemplate}">Soja</CheckBox>
                            <CheckBox Style="{StaticResource glutenCheckBox}" Template="{DynamicResource CheckBoxControlTemplate}">Gluten</CheckBox>
                            <CheckBox Style="{StaticResource sulfitosCheckBox}" Template="{DynamicResource CheckBoxControlTemplate}">Sulfitos</CheckBox>
                        </WrapPanel>
                    </GroupBox>
                    <Button x:Name="limpiarSeleccionButton" Click="limpiarSeleccionButton_Click" Template="{DynamicResource ButtonControlTemplate}">Limpiar Selección</Button>
                </StackPanel>
                <ListBox ItemsSource="{Binding Path=Platos}" SelectedItem="{Binding Path=PlatoSeleccionado}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel></WrapPanel>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
            </DockPanel>
        </Border>
    </Border>
</Window>
